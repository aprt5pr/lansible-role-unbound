---

services: docker

env:
  - distro: centos7
    init: /usr/lib/systemd/systemd
    run_opts: "--privileged --volume=/sys/fs/cgroup:/sys/fs/cgroup:ro"

before_install:
  # Pull container.
  - 'docker pull geerlingguy/docker-${distro}-ansible:latest'

install:
  # Add ansible.cfg to pick up roles path.
  - "echo '[defaults]' > ansible.cfg"
  - "echo 'roles_path = ../' >> ansible.cfg"
  - "cat ansible.cfg"

script:
  - container_id=$(mktemp)
  # Run container in detached state
  - 'docker run --detach --volume="${PWD}":/etc/ansible/roles/lansible-role-unbound:ro ${run_opts} geerlingguy/docker-${distro}-ansible:latest "${init}" > "${container_id}"'

  # Ansible syntax check
  - 'docker exec --tty "$(cat ${container_id})" env TERM=xterm ansible-playbook /etc/ansible/roles/lansible-role-unbound/tests/test.yml --syntax-check'

  # Test role (first pass)
  - 'docker exec --tty "$(cat ${container_id})" env TERM=xterm ansible-playbook /etc/ansible/roles/lansible-role-unbound/tests/test.yml'

  # Test role (idempotence)
  - idempotence=$(mktemp)
  - docker exec "$(cat ${container_id})" ansible-playbook /etc/ansible/roles/lansible-role-unbound/tests/test.yml | tee -a ${idempotence}
  - >
    tail ${idempotence}
    | grep -q 'changed=0.*failed=0'
    && (echo 'Idempotence test: pass' && exit 0)
    || (echo 'Idempotence test: fail' && exit 1)

  # Test forward lookups
  - docker exec -i "$(cat ${container_id})" dig +noall +answer +timeout=3 -t a github.com @localhost
  
  # Test local data forward lookups
  - local_data_fwd=$(mktemp)
  - docker exec "$(cat ${container_id})" dig +short +timeout=3 -t a ads.example.com @localhost | tee -a ${local_data_fwd}
  - >
   grep -q "0.0.0.0" ${local_data_fwd}
   && (echo 'Local data forward: pass' && exit 0)
   || (echo 'Local data forward: fail' && exit 1)

  # Test local data reverse lookups
  - local_data_rev=$(mktemp)
  - docker exec "$(cat ${container_id})" dig +short +timeout=3 -x 10.22.33.43 @localhost | tee -a ${local_data_rev}
  - >
   grep -q "www3.example.io" ${local_data_rev}
   && (echo 'Local data reverse: pass' && exit 0)
   || (echo 'Local data reverse: fail' && exit 1)

  # Test remote control
  - docker exec -i "$(cat ${container_id})" unbound-control status

notifications:
  email: false
  webhooks: https://galaxy.ansible.com/api/v1/notifications/
